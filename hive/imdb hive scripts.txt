#######################################################################################################################
#Initialize the database and create table
##create database in hive (only need to be created once)
hive
create database imdb;
use imdb;

##create table for each files (only need to be created once)
#name_basics
create table name_basics(nconst string, primaryName string, birthYear int, deathYear int, primaryProfession array<string>, knownforTitles array<string>) comment 'name basics' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#title_akas
create table title_akas(titleId string, ordering int, title string, region string, language string, types array<string>, attributes array<string>, isOriginalTitle boolean) comment 'title AKAs' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#title_basics
create table title_basics(tconst string, titleType string, primaryTitle string, originalTitle string, isAdult boolean, startYear int, endYear int, runtimeMinutes int, genres string) comment 'title basics' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#title_crew
create table title_crew(tconst string, directors array<string>, writers array<string>) comment 'title crew' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#title_episode
create table title_episode(tconst string, parentTconst string, seasonNumber int, episodeNumber int) comment 'title episode' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#title_principals
create table title_principal(tconst string, ordering int, nconst string, category string, job string) comment 'title principal' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#title_ratings
create table title_ratings(tconst string, averageRating double, numVotes int) comment 'title ratings' row format delimited fields terminated by '\t' tblproperties("skip.header.line.count"="1") stored as Parquet;

#convert text format into parquet (if required)
#alter table table_name set fileformat Parquet;


#######################################################################################################################
#Script to be automated by crontab
##download IMDB dataset (will download and replace existing file, to be run daily)
wget -q https://datasets.imdbws.com/name.basics.tsv.gz -O /home/student/imdb/data/name.basics.tsv.gz
wget -q https://datasets.imdbws.com/title.akas.tsv.gz -O /home/student/imdb/data/title.akas.tsv.gz
wget -q https://datasets.imdbws.com/title.basics.tsv.gz -O /home/student/imdb/data/title.basics.tsv.gz
wget -q https://datasets.imdbws.com/title.crew.tsv.gz -O /home/student/imdb/data/title.crew.tsv.gz
wget -q https://datasets.imdbws.com/title.episode.tsv.gz -O /home/student/imdb/data/title.episode.tsv.gz
wget -q https://datasets.imdbws.com/title.principals.tsv.gz -O /home/student/imdb/data/title.principals.tsv.gz
wget -q https://datasets.imdbws.com/title.ratings.tsv.gz -O /home/student/imdb/data/title.ratings.tsv.gz

##load data from local to hive (every day)
load data local inpath '/home/student/imdb/data/name.basics.tsv.gz' into table name_basics;
load data local inpath '/home/student/imdb/data/title.akas.tsv.gz' into table title_akas;
load data local inpath '/home/student/imdb/data/title.basics.tsv.gz' into table title_basics;
load data local inpath '/home/student/imdb/data/title.crew.tsv.gz' into table title_crew;
load data local inpath '/home/student/imdb/data/title.episode.tsv.gz' into table title_episode;
load data local inpath '/home/student/imdb/data/title.principals.tsv.gz' into table title_principal;
load data local inpath '/home/student/imdb/data/title.ratings.tsv.gz' into table title_ratings;

##query (to be confirmed)

